// Zian Chen & Elysia Smyers, Period 3
// 12 December 2017
// Player - class that creates a PLAYER and can perform tasks with PLAYER's hand

public class Player {
	private Card[] hand;
	private int handSize;
	private int highNum;

	// precondition: none.
	// postcondition: constructs a Player with a hand of cards
	public Player(int handSize) {
		highNum = 0;
		this.handSize = handSize;
		/* Initialize your hand to null first. */
		hand = new Card[handSize];
		for(int i = 0; i < handSize; i++) {
			hand[i] = null;
		}
	}
	
	// precondition: none.
	// postcondition: returns the player's hand.
	public Card[] getHand() {
		return hand;
	}
	
	// precondition: none.
	// postcondition: returns the card at a specific location in hand.
	public Card getCard(int cardNumber) {
		return hand[cardNumber];
	}
	
	// precondition: none.
	// postcondition: returns the location of the last card in the hand.
	public int getHighNum() {
		return highNum;
	}

	// precondition: none.
	// postcondition: prints out the hand of the player.
	public String toString() {
		String message = "";
		for(int i = 0; i < handSize; i++) {
			/* Only print out if the location has something in it. */
			if(hand[i] != null)
				message += "[" + (i + 1) + "] " + hand[i] + '\n';
		}
		return message;
	}

	// precondition: none.
	// postcondition: adds a card to the hand in the last spot (which would be null).
	public void add(Card newCard) {
		int firstNull = 0;
		
		/* Tracks the closest location to 0 that has a NULL value. */
		for(int i = hand.length - 1; i >= 0; i--) {
			if(hand[i] == null)
				firstNull = i;
		}
		
		/* Sets the NULL value to the card being passed in. */
		hand[firstNull] = newCard;
		highNum++;
	}
	
	// precondition: none.
	// postcondition: moves the last card to spot of played card and sets last card to null.
	public void subtract(int played) {
		hand[played] = hand[highNum - 1];
		hand[highNum - 1] = null;
		highNum--;
	}
	
	// precondition: none.
	// postcondition: returns the points in a player's hand.
	public int calculatePoints() {
		/* Eights are worth 50 points, court cards are worth 10, and the rest are face value. */
		int points = 0;
		for(int i = 0; i < hand.length; i++) {
			if(hand[i] != null) {
				if(hand[i].getValue() == 8) {
					points += 50;
				}
				else if(hand[i].getValue() == 11 || hand[i].getValue() == 12 || hand[i].getValue() == 13 || hand[i].getValue() == 14) {
					points += 10;
				}
				else {
					points += hand[i].getValue();
				}
			}
		}
		return points;
	}
}
